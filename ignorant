javascript: (function() {

/*
  API Request Class
*/

const Completion = {
  part1: '{"role":"assistant","id":"chatcmpl',
  part2: '"},"index":0,"finish_reason":null}]}}',
  regex: new RegExp(`${this.part1}(.*)${this.part2}`),
  timer: null,
  messageQueue: [],
  streamCompleted: false,
  lastMsgId: null,
  finalResult: null,

  request: async function (prompt, proxy) {
    const headers = {
      "Content-Type": "application/json",
      Origin: "https://chatbot.theb.ai",
    };

    if (proxy) {
      headers["proxy"] = proxy;
    }

    const options = {};
    if (this.lastMsgId) {
      options["parentMessageId"] = this.lastMsgId;
    }

    const response = await fetch("https://chatbot.theb.ai/api/chat-process", {
      method: "POST",
      headers: headers,
      body: JSON.stringify({
        prompt: prompt,
        options: options,
      }),
      mode: "cors",
    });

    const reader = response.body.getReader();

    while (true) {
      const { done, value } = await reader.read();
      if (done) {
        break;
      }
      this.handleStreamResponse(new TextDecoder().decode(value));
    }

    this.streamCompleted = true;
    return new Promise((resolve, reject) => {
      if (this.finalResult !== null) {
        resolve(this.finalResult);
      } else {
        const checkResult = setInterval(() => {
          if (this.finalResult !== null) {
            clearInterval(checkResult);
            resolve(this.finalResult);
          }
        }, 100);
      }
    });
  },

  handleStreamResponse: function (response) {
    const message = response.toString("utf-8");
    const regex =
      /{"role":"assistant","id":"chatcmpl.*?","parentMessageId":".*?","text":"(.*?)"/;
    const match = message.match(regex);
    if (match && match[1]) {
        let text = match[1].replace(/\\(?=")/g, ""); // remove backslashes before double quotes
        text = text.replace(/\\\\/g, "\\"); // replace escaped backslashes with single backslash
        this.finalResult = text;
    }
  },
};

/*
  URL HIDER METHOD
*/

const currentUrl = location.href

const UrlHider = {
    handleHide: function (string) {
        const baseUrl = currentUrl.split('%')[0]; // Get the base URL without any appended string
        const newUrl = baseUrl + '/' + string; // Append the new string
        const newTitle = 'My new page title';
        const newState = { additionalInformation: 'wlul' };

        window.history.pushState(newState, newTitle, newUrl); // This will create a new history entry with the updated URL
    }
}

// //
const cont = document.createElement("div");
const txt = document.createElement("span");
cont.id="a"
txt.id = "txt";
cont.style = `position: fixed; background-color: transparent; bottom: 0px; right: 0px; width:400px; height:22px; overflow: auto;`
txt.style = `color:black; opacity:0.14; font-family: 'Courier New', Courier, monospace;`

document.body.appendChild(cont);
cont.appendChild(txt)

/*
  The prompt
*/
const prompt = `I will give you an unformatted multiple-choice question with multiple answers here is an example of it may look like:
What is the capital of France?
*
1 point
Paris
Madrid
London
Berlin

When I provide you with the question, You will separate the choices into A, B, C, D, etc if there are more options, and ignore any extraneous text like "*" and point values.
Please respond with the letter of the correct answer.
Only respond with the letter of the correct answer.
Just the answer letter.

Like this: in that example question the answer that you should say is "A" you should not say anything before or after it, just the correct answer letter by it self.
Got it?
ALSO: when you are making your response, do not bold the text or make it look something like "\"answer\".
Here is my first question: `;

/*
  Yes
*/

document.addEventListener("keydown", function (event) {
    if (event.key === "\\") {
        txt.textContent = ''
        // UrlHider.handleHide('')
    }

    if (event.key === "]") {
        txt.textContent = ''
        const selection = window.getSelection().toString().trim();
        if (selection) {
            Completion.request(selection).then((result) => {
                txt.textContent = result
                // UrlHider.handleHide(result);
            });
        }
    }

    if (event.key === "[") {
        txt.textContent = ''
        const selection = window.getSelection().toString().trim();
        if (selection) {
            Completion.request(prompt+selection).then((result) => {
                txt.textContent = result
                // UrlHider.handleHide(result);
            });
        }
    }
});

})();
